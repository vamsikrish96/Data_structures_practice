package ps_1;
import java.util.*;
public class Path_in_graph {

	static class Graph
	{
		int n;
		LinkedList<Integer> m[]; 
		
		Graph(int x)
		{
			this.n = x;
			m = new LinkedList[x];
			for(int i = 0;i<x;i++)
			{
				
				m[i] = new LinkedList<Integer>();
			}
		}
		
		
	}
	
	public static void main(String[] args) {
		
		Scanner inp = new Scanner(System.in);
		System.out.println("Enter the number of node and edges");
		
		int num_node = inp.nextInt();
		int[] visit = new int[num_node +  1];
		
		int num_edges = inp.nextInt();
		//ArrayList<Integer> b = new ArrayList<Integer>();
	  //  ArrayList<ArrayList<Integer>> hm = new ArrayList<ArrayList<Integer>>(num_node+1);
		Graph hm = new Graph(num_node+ 1);
		System.out.println(hm.m.length);
	    Arrays.fill(visit,0);
	    
	   
	    for(int i = 0;i<num_edges;i++)
	    {	System.out.println("enter v and u");
	    	int v = inp.nextInt();
	    	int u = inp.nextInt();
	    	
	    	hm.m[v].add(u);
	    	
	    	hm.m[u].add(v);
	    	
	    	
	    }
	 
	    

		/*for (int i = 0; i < hm.n; i++) 
		{ 
			for(int j: hm.m[i])
	        { 
				 System.out.println(i + " elements " + j);
	        }
		}
	    
	*/    
	    
	    System.out.println("Enter the queries");
	    int num_queries = inp.nextInt();
	    
	    for(int q = 0;q < num_queries;q++)
	    {   System.out.println("Enter the source and destination to be checked");
	    	int s = inp.nextInt();
	    	int d = inp.nextInt();
	    	Arrays.fill(visit,0);
	    	boolean result = DFS(hm,s,d,visit);
	    	 for(int i=0;i<visit.length;i++)
	 	    {
	 	    	System.out.println(visit[i]);
	 	    }
	 	    System.out.println(visit);
	    	
	    	if(result == true)
	    	{
	    		System.out.println("Link exists");
	    	}
	    	else
	    	{
	    		System.out.println("No");
	    	}
	    }
	    

	    
	    
	    
	}

	
public static boolean DFS( Graph hm,int s,int d,int visit[])
{
	if(s == d)
	{
		return true;
	}
	
	if(visit[s] == 1)
	{
		return false;
		
	}
	
	visit[s] = 1;
	
	//for (int i = 0; i < hm.m.length; i++) 
	//{ 
		for(int j: hm.m[s])
        { 
        	
        	if(DFS(hm,j,d,visit) == true)
        	{
        		return true;
        	}
        } 
//}    
	   
    return false;
	
	
	
	
}
}
