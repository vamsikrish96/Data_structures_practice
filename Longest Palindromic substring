// Longest palindromic substring
package ps_1;

public class Longest_palindrome_string {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int max_len  = 0;
		String s1 = "";
		int start  = 0;
		char[] ch = s1.toCharArray();
		int len = s1.length();
		for(int i = 1;i<s1.length();i++)
		{
			//Odd 
			int first = i-1;
			int last  = i+1;
			
			while((first >= 0)&&(last < len)&&(ch[first] == ch[last]))
			{
				
				if(max_len < last - first + 1)
				{
					start = first;
					max_len = last - first + 1;
				}
				
				first--;
				last++;
				
				
				
			}
			// Even
			first = i-1;
			last = i;
			
			while((first >= 0)&&(last < len)&&(ch[first] == ch[last]))
			{
				
				if(max_len < last - first + 1)
				{	start = first;
					max_len = last - first + 1;
				}
				
				first--;
				last++;
				
				
				
			}
			
		}
		
		for(int d = start;d<start+max_len;d++)
		{
			System.out.print(ch[d]);
			
		}
		
		System.out.println();
		
		
		System.out.println("The longest palindromic string is " + max_len);
		
		
	}

}
